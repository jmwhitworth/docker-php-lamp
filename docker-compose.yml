x-php-service: &php-service
  # Inherited by all PHP-FPM instances/versions
  build: &php-service-args
    args:
        # For the container's non-root user account
        USER_NAME: ${USER_NAME:-dev}
        USER_UID: ${USER_UID:-1000}
        USER_GID: ${USER_GID:-1000}
        # Set for streamlining Git CLI use
        GIT_EMAIL: ${GIT_EMAIL:-''}
        GIT_NAME: ${GIT_NAME:-''}
        # Node is installed via NVM so this can be flexible during use
        NODE_VERSION: ${NODE_VERSION:-14.21.3}
        COMPOSER_VERSION: ${COMPOSER_VERSION:-2.8.3}
  volumes:
    # Project files & Composer cache (optional)
    - projects:/var/www/html
    - composer:/home/${USER_NAME:-dev}/.composer
    # PHP config and bashrc aliases & scripts
    - ./php/php.ini:/usr/local/etc/php/php.ini
    - ./php/aliases:/home/${USER_NAME:-dev}/.bash_aliases
    - ./php/scripts:/home/${USER_NAME:-dev}/scripts
    - ./php/php-fpm.d:/usr/local/etc/php-fpm.d
    # Passing/storing SSH & Heroku CLI sessions from host
    - ./ssh:/home/${USER_NAME:-dev}/.ssh
    - ${HEROKU_SESSION:-./php/_netrc}:/home/${USER_NAME:-dev}/.netrc
    - ./php/zsh_history:/home/${USER_NAME:-dev}/.zsh_history
    - /etc/localtime:/etc/localtime:ro
    # AWS CLI Profiles
    - ./aws:/home/${USER_NAME:-dev}/.aws
  dns:
    # dnsmasq container, so it can resolve 'internal' requests to Nginx
    - 172.16.1.1

services:
  php-74-fpm:
    <<: *php-service
    container_name: ${CONTAINER_PREFIX:-lamp}-php7.4
    build:
      <<: *php-service-args
      context: ./php/7.4

  php-83-fpm:
    <<: *php-service
    container_name: ${CONTAINER_PREFIX:-lamp}-php8.3
    build:
      <<: *php-service-args
      context: ./php/8.3

  nginx:
    container_name: ${CONTAINER_PREFIX:-lamp}-nginx
    image: nginx:${NGINX_VERSION:-1.27}-alpine
    ports:
      - '${NGINX_PORT:-80}:80'
      - '${NGINX_SSL_PORT:-443}:443'
    volumes:
      - projects:/var/www/html
      - ${NGINX_DIR:-./nginx}/nginx.conf:/etc/nginx/nginx.conf
      - ${NGINX_DIR:-./nginx}/default.conf:/etc/nginx/conf.d/default.conf
      - ${NGINX_DIR:-./nginx}/sites-enabled:/etc/nginx/sites-enabled
      - ${NGINX_DIR:-./nginx}/php:/etc/nginx/php
      - ${NGINX_DIR:-./nginx}/additional/:/etc/nginx/additional/
      - ${LOGGING_DIR:-./logs}/nginx:/var/log/nginx/
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - php-74-fpm
      - php-83-fpm
    networks:
      default:
        # Static IP here so dnsmasq can point to Nginx easily
        ipv4_address: 172.16.1.2
    restart: unless-stopped

  mysql:
    container_name: ${CONTAINER_PREFIX:-lamp}-mysql
    image: mysql:${MYSQL_VERSION:-8.0.40}-debian
    ports:
      - '${MYSQL_PORT:-3306}:3306'
    volumes:
      - mysql:/var/lib/mysql
      - ${LOGGING_DIR:-./logs}/mysql:/var/log/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_unicode_ci
    restart: unless-stopped

  postgres:
    container_name: ${CONTAINER_PREFIX:-lamp}-postgres
    image: postgres:${POSTGRES_VERSION:-12.22}-bullseye
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
    restart: unless-stopped

  redis:
    container_name: ${CONTAINER_PREFIX:-lamp}-redis
    image: redis:7.4-alpine
    ports: 
      - '${REDIS_PORT:-6379}:6379'
    restart: unless-stopped

  dnsmasq:
    container_name: ${CONTAINER_PREFIX:-lamp}-dnsmasq
    image: strm/dnsmasq
    volumes:
      - ./dnsmasq.conf:/etc/dnsmasq.conf
    ports:
      - '${DNSMASQ_PORT:-53}:53/udp'
    cap_add:
      - NET_ADMIN
    networks:
      default:
        # Static IP so we can point other containers' dns here
        ipv4_address: 172.16.1.1

volumes:
  projects:
  mysql:
  postgres:
  composer:

networks:
  default:
    ipam:
      config:
        - subnet:   172.16.0.0/23
          ip_range: 172.16.0.0/24
